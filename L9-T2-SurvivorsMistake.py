import pytest
"""
*-----------------------*---------------------------------------*
|   Ограничение времени |   1 секунда                           |
|   Ограничение памяти  |   64Mb                                |
|   Ввод                |   стандартный ввод или input.csv      |
|   Вывод               |   стандартный вывод или output.txt    |
*-----------------------*---------------------------------------*

# Описание
В математической статистике есть много интересных парадоксов и загадок. Одним из самых известных и интересных примеров является так называемая "ошибка выжившего". Этот парадокс имеет много интерпретаций: например, есть известная история о том, как во время Второй мировой войны американские инженеры принимали решение о том, каким образом нужно укрепить части самолетов. У них были ресурсы для укрепления лишь одной части: двигателя, лобового стекла, крыльев или хвоста самолета. Большинство самолетов возвращались с повреждениями в районе хвоста и крыльев — логичным решение было укреплять одну из этих частей. Но все не так просто: в воздушном бою снаряды попадают по самолетам равномерно, поэтому факт того, что большинство самолетов возвращается с повреждениями в этих областях, говорит лишь о некритичности попаданий в эти области, поскольку самолетам все же хватает ресурсов для возвращения на базу. Тогда укреплять нужно область с минимальным количеством попаданий.

Вам предлагается отследить "ошибку выжившего" в следующем формате.

Вам дан csv-файл, в котором содержится информация об N вернувшихся на базу самолетах. Мы условно разделили самолет на 10 областей, в двумерном массиве размерностью N x 10 приведено количество попаданий в каждую область у вернувшегося самолета. Посчитайте среднее количество попаданий для каждой области по всем самолетам и примите решение о том, какую из 10 10 областей Вы бы стали укреплять.

# Формат ввода
Файл input.csv, содержащий информацию о попаданиях в разные области самолета в виде двумерного массива: N строк — записи об N самолетах, 10 столбцов — количество попаданий в каждую из 10 областей.

# Формат вывода
В стандартный поток вывода или в файл output.txt выведите число от 1 до 10, представляющее собой Ваш выбор. Обратите внимание, что области нумеруются не с 0, а с 1.

Числа в массиве должны быть целыми - округление методом отбрасывания дробной части.

# Примечания
1. Разделитель в файле input.csv — запятая. 
2. Файл input.csv не содержит заголовка. Использование pandas является обязательным. 
3. Не забывайте делать import pandas as pd. 
4. Обратите внимание, что по условию нужно брать не столбец с максимальной суммой, а столбец с минимальной суммой.
"""

def test_example():
    ...


def main() -> None:
    import pandas as pd
    data = pd.read_csv("input.csv", delimiter=",")
    avgData = data.mean(axis=0)
    print(avgData.argmin() + 1)


if __name__ == "__main__":
    main()
