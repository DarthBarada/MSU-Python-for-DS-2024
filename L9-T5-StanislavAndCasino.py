import pytest
"""
*-----------------------*---------------------------------------*
|   Ограничение времени |   1 секунда                           |
|   Ограничение памяти  |   64Mb                                |
|   Ввод                |   стандартный ввод или input.csv      |
|   Вывод               |   стандартный вывод или output.txt    |
*-----------------------*---------------------------------------*

# Описание
Электрик Станислав любил смотреть фильмы и сериалы, пользуясь различными бесплатными сервисами, вследствие чего невольно стал частью аудитории реклам интернет-казино. Вдохновившись последними, Станислав твердо решил, что в жизни нужно что-то менять, и отправился искать удачу в интернет-казино "3 кабачка". Казино предложило Станиславу приветственный бонус: Станислав мог получить 1000 рублей или же статистику по выигрышам на каждом из игровых автоматов за последние 100 игр. Учитывая, что игровых автоматов в казино "3 кабачка" очень много, а Станислав не привык принимать необдуманные решения, он согласился на второе условие и получил таблицу с данными в файле input.csv. Станислав не учел лишь одного: в программе подготовки электриков никогда не была курса по анализу данных при помощи Python, так что Станислав теперь понятия не имеет, что ему делать со столь ценной информацией. Помогите Станиславу по данным из файла принять решение, какой из автоматов наиболее прибыльный.

# Формат ввода
В input.csv хранятся данные о каждом автомате, а именно: 
name 1 , name 2,  …, name n 
win_1^1, win_2^1, …, win_n^1 
win_1^2, win_2^2, …, win_n^2
…
win_1^100, win_2^100, …, win_n^100

где name i — название автомата, win_i^k — выигрыш на автомате name i за k-ю игру. Обратите внимание, что в примере для удобства приведена статистика только за последние 3 игры.

# Формат вывода
Название автомата name i , котороя в среднем дает наибольший выигрыш за последние 100 игр.

# Примечания
1. Воспользуйтесь подходящими функциями из библиотеки pandas.
2. Для считывания входных данных можно использовать либо старый подход (с помощью open(), readlines(), split() и т.д.). Но лучше считывать с помощью pandas.read_csv().
3. При работе с pandas.DataFrame() в текущей версии pandas может не работать конструкция вида: df.columns[df.mean().argmax()] (df=pandas.DataFrame()). Используйте одну из следующих конструкций:
    * df.mean().values.argmax(),
    * .idxmax().
"""

def test_example():
    ...


def main() -> None:
    import pandas as pd
    data = pd.read_csv("input.csv", delimiter=",")
    data = data.mean()
    print(data.idxmax())


if __name__ == "__main__":
    main()
